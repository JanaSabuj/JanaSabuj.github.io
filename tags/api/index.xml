<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>api on Sabuj Jana</title>
    <link>https://janasabuj.github.io/tags/api/</link>
    <description>Recent content in api on Sabuj Jana</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2023, Sabuj Jana.</copyright>
    <lastBuildDate>Sat, 01 Apr 2023 11:42:33 +0530</lastBuildDate>
    
	<atom:link href="https://janasabuj.github.io/tags/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HELM-ing our Kubernetes deployed Golang music api</title>
      <link>https://janasabuj.github.io/posts/musicapik8s-helm/</link>
      <pubDate>Sat, 01 Apr 2023 11:42:33 +0530</pubDate>
      
      <guid>https://janasabuj.github.io/posts/musicapik8s-helm/</guid>
      <description>In the previous blog, we built a golang music api and deployed it on top of K8s. However, the manifest files for our app (api and mysql components) were huge in number. This will make our app distribution infeasible since end users will need to manually apply all the manifest yamls in their k8s cluster.
In comes the saviour - Helm charts. Apt is to Debian as Helm is to Kubernetes.</description>
    </item>
    
    <item>
      <title>Building a Golang Music API and Deploying it on K8s</title>
      <link>https://janasabuj.github.io/posts/musicapik8s/</link>
      <pubDate>Tue, 14 Mar 2023 11:37:16 +0530</pubDate>
      
      <guid>https://janasabuj.github.io/posts/musicapik8s/</guid>
      <description>We love building backend applications. But have we ever thought of building it cloud-natively? Did we ever keep in mind the deployment process and the underlying infra that would eventually be running our app ?
In this blog, we build a golang backend music rest api and deploy it on Kubernetes. We use a lot of k8s constructs like Pods, Deployments, Services, ConfigMaps, Secrets, PersistentVolumeClaims, PersistentVolumes, port-forwarding etc - all in one - for deploying our backend app.</description>
    </item>
    
  </channel>
</rss>